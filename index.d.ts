// Generated by dts-bundle v0.3.0

declare module 'tss-angular' {
    export * from 'tss-angular/entities';
    export { IAlertService } from 'tss-angular/servicies/alertService';
}

declare module 'tss-angular/entities' {
    export * from 'tss-angular/entities/alertType';
    export * from 'tss-angular/entities/feedback';
    export * from 'tss-angular/entities/feedbackType';
}

declare module 'tss-angular/servicies/alertService' {
    export interface IAlertService {
        add(type: string, msg: string, autoClose: boolean): any;
        closeAlert(alert: any): any;
    }
    export class AlertService implements IAlertService {
        constructor($rootScope: any, $timeout: any);
        add(type: string, msg: string, autoClose?: boolean): void;
        closeAlert(alert: any): void;
        closeAlertIndex(index: any): void;
    }
}

declare module 'tss-angular/entities/alertType' {
    export class AlertType {
        static success: string;
        static info: string;
        static warning: string;
        static danger: string;
    }
}

declare module 'tss-angular/entities/feedback' {
    import { FeedbackType } from 'tss-angular/entities/feedbackType';
    export class Feedback {
        isWorking: boolean;
        text: string;
        type: FeedbackType;
        clear(): void;
        setNone(text?: string): void;
        setInfo(text?: string): void;
        setError(text?: string): void;
        setSuccess(text?: string): void;
        isInfo(): boolean;
        isError(): boolean;
        isSuccess(): boolean;
    }
}

declare module 'tss-angular/entities/feedbackType' {
    export enum FeedbackType {
        None = 0,
        Info = 1,
        Error = 2,
        Success = 3,
    }
}

