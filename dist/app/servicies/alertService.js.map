{"version":3,"sources":["servicies/alertService.ts","servicies/alertService.js"],"names":["AlertService","AlertService.constructor"],"mappings":"AAEA;;uDACA,IAAA,eAAA,CAAA,YAAA;IACIA,SAAAA,aACYA,YACAA,UAAQA;QAHxBC,IAAAA,QAAAA;QAEgBA,KAAAA,aAAAA;QACAA,KAAAA,WAAAA;QAKZA,KAAAA,MAAMA,UAACA,MAAiBA,KAAaA,WAAyBA;YAAzBA,IAAAA,cAAAA,KAAAA,GAAyBA,EAAzBA,YAAAA;YACjCA,IAAIA,QAAQA;gBACRA,MAAMA;gBACNA,KAAKA;gBACLA,OAAOA,YAAAA;oBACHA,MAAKA,WAAWA;;;YAIxBA,MAAKA,WAAWA,OAAOA,KAAKA;YAE5BA,IAAIA,WAAWA;gBACXA,MAAKA,SAASA,YAAAA;oBACVA,MAAMA;mBACPA;;;QAIXA,KAAAA,aAAaA,UAACA,OAAKA;YACfA,MAAKA,gBAAgBA,MAAKA,WAAWA,OAAOA,QAAQA;;QAIxDA,KAAAA,kBAAkBA,UAACA,OAAKA;YACpBA,MAAKA,WAAWA,OAAOA,OAAOA,OAAOA;;QA3BrCA,WAAWA,SAASA;;IA6B5BD,OAAAA;;AAlCa,QAAA,eAAY;AC8BzB","file":"servicies/alertService.js","sourcesContent":["import {AlertType} from 'entities';\r\n\r\n/*@ngInject*/ \r\nexport class AlertService {\r\n    constructor(\r\n        private $rootScope,\r\n        private $timeout\r\n    ) {\r\n        $rootScope.alerts = [];\r\n    }\r\n\r\n    add = (type: AlertType, msg: string, autoClose: boolean = true) => {\r\n        var alert = {\r\n            type: type,\r\n            msg: msg,\r\n            close: () => {\r\n                this.closeAlert(alert);\r\n            }\r\n        }\r\n\r\n        this.$rootScope.alerts.push(alert);\r\n\r\n        if (autoClose) {\r\n            this.$timeout(() => {\r\n                alert.close();\r\n            }, 12000);\r\n        }\r\n    }\r\n\r\n    closeAlert = (alert) => {\r\n        this.closeAlertIndex(this.$rootScope.alerts.indexOf(alert));\r\n\r\n    }\r\n\r\n    closeAlertIndex = (index) => {\r\n        this.$rootScope.alerts.splice(index, 1);\r\n    }\r\n}","/*@ngInject*/\nvar AlertService = (function () {\n    function AlertService($rootScope, $timeout) {\n        var _this = this;\n        this.$rootScope = $rootScope;\n        this.$timeout = $timeout;\n        this.add = function (type, msg, autoClose) {\n            if (autoClose === void 0) { autoClose = true; }\n            var alert = {\n                type: type,\n                msg: msg,\n                close: function () {\n                    _this.closeAlert(alert);\n                }\n            };\n            _this.$rootScope.alerts.push(alert);\n            if (autoClose) {\n                _this.$timeout(function () {\n                    alert.close();\n                }, 12000);\n            }\n        };\n        this.closeAlert = function (alert) {\n            _this.closeAlertIndex(_this.$rootScope.alerts.indexOf(alert));\n        };\n        this.closeAlertIndex = function (index) {\n            _this.$rootScope.alerts.splice(index, 1);\n        };\n        $rootScope.alerts = [];\n    }\n    return AlertService;\n})();\nexports.AlertService = AlertService;\n"],"sourceRoot":"/source/"}