{"version":3,"sources":["servicies/rcDisabled.ts","servicies/rcDisabled.js"],"names":["RcDisabledProvider","RcDisabledProvider.defaultDisableHandler","RcDisabledProvider.onDisable","RcDisabledProvider.$get"],"mappings":"AAMA;AACA,IAAA,qBAAA,CAAA,YAAA;IAAAA,SAAAA,qBAAAA;;IAGIA,mBAAAA,UAAAA,wBAAAA,UAAsBA,aAAaA,YAAUA;QACzCC,IAAIA,YAAYA,OAAOA;QACvBA,aAAaA,aAAaA,aAAaA;QAExCA,IAAIA,aAAsBA;aACpBA,KAAKA;aACLA,OAAOA;aACPA,OAAOA;aACPA,OAAOA,UAAUA,OAAKA;YACnB,OAAO,OAAO,MAAM,UAAU,IAAI,WAAW,OAAO,iBAAiB,WAAW;;aAEnFA,IAAIA;;;QAITA,IAAIA,WAAWA,QAAQA;YACTA,WAAWA,KAAKA,uBAAwBA,OAAOA,aAAaA,YAAYA;;QAGtFA,WAAWA,YAAYA,YAAYA;aAC9BA,OAAOA;aACPA,KAAKA,YAAYA;;IAG1BD,mBAAAA,UAAAA,YAAAA,UAAUA,eAAaA;QACnBE,KAAKA,uBAAuBA;;IAGhCF,mBAAAA,UAAAA,OAAAA,YAAAA;QAAAG,IAAAA,QAAAA;QACIA,OAAOA;YACHA,SAASA,UAACA,aAAaA,YAAUA;gBAC7BA,OAAOA,CAACA,MAAKA,wBAAwBA,MAAKA,qBAAqBA,aAAaA,cAAcA,MAAKA,sBAAsBA,aAAaA;;;;IAIlJH,OAAAA;;AAtCa,QAAA,qBAAkB;AC+B/B","file":"servicies/rcDisabled.js","sourcesContent":["interface IJQuery extends JQuery {\r\n    button(selector: string): JQuery;\r\n    button(element: Element): JQuery;\r\n    button(obj: JQuery): JQuery;\r\n}\r\n\r\n/*@ngInject*/\r\nexport class RcDisabledProvider {\r\n    customDisableHandler;\r\n\r\n    defaultDisableHandler(rootElement, isDisabled) {\r\n        var jqElement = jQuery(rootElement);\r\n        isDisabled = isDisabled ? isDisabled : false;\r\n\r\n       var jqElement2 = <IJQuery>jqElement\r\n            .find(':not([rc-disabled])')\r\n            .filter('.btn, li, input, button, select, md-checkbox, md-select, textarea, md-radio-button, md-switch')\r\n            .filter(':not([ng-disabled])')\r\n            .filter(function (index) {\r\n                return jQuery(this).parents().not(jqElement).filter('[rc-disabled]').length === 0;\r\n            })\r\n            .add(jqElement);\r\n\r\n        // if the Bootstrap \"Button\" jQuery plug-in is loaded, use it on those\r\n        // that have it configured\r\n        if (jqElement2.button) {\r\n            (<IJQuery>jqElement2.find('[data-loading-text]')).button(isDisabled ? 'loading' : 'reset');\r\n        }\r\n\r\n        jqElement2.toggleClass('disabled', isDisabled)\r\n            .filter('input, button, select, md-checkbox, md-select, textarea, md-radio-button, md-switch')\r\n            .attr('disabled', isDisabled);\r\n    }\r\n\r\n    onDisable(customHandler) {\r\n        this.customDisableHandler = customHandler;\r\n    }\r\n\r\n    $get() {\r\n        return {\r\n            disable: (rootElement, isDisabled) => {\r\n                return (this.customDisableHandler) ? this.customDisableHandler(rootElement, isDisabled) : this.defaultDisableHandler(rootElement, isDisabled);\r\n            }\r\n        }\r\n    }\r\n}","/*@ngInject*/\nvar RcDisabledProvider = (function () {\n    function RcDisabledProvider() {\n    }\n    RcDisabledProvider.prototype.defaultDisableHandler = function (rootElement, isDisabled) {\n        var jqElement = jQuery(rootElement);\n        isDisabled = isDisabled ? isDisabled : false;\n        var jqElement2 = jqElement\n            .find(':not([rc-disabled])')\n            .filter('.btn, li, input, button, select, md-checkbox, md-select, textarea, md-radio-button, md-switch')\n            .filter(':not([ng-disabled])')\n            .filter(function (index) {\n            return jQuery(this).parents().not(jqElement).filter('[rc-disabled]').length === 0;\n        })\n            .add(jqElement);\n        // if the Bootstrap \"Button\" jQuery plug-in is loaded, use it on those\n        // that have it configured\n        if (jqElement2.button) {\n            jqElement2.find('[data-loading-text]').button(isDisabled ? 'loading' : 'reset');\n        }\n        jqElement2.toggleClass('disabled', isDisabled)\n            .filter('input, button, select, md-checkbox, md-select, textarea, md-radio-button, md-switch')\n            .attr('disabled', isDisabled);\n    };\n    RcDisabledProvider.prototype.onDisable = function (customHandler) {\n        this.customDisableHandler = customHandler;\n    };\n    RcDisabledProvider.prototype.$get = function () {\n        var _this = this;\n        return {\n            disable: function (rootElement, isDisabled) {\n                return (_this.customDisableHandler) ? _this.customDisableHandler(rootElement, isDisabled) : _this.defaultDisableHandler(rootElement, isDisabled);\n            }\n        };\n    };\n    return RcDisabledProvider;\n})();\nexports.RcDisabledProvider = RcDisabledProvider;\n"],"sourceRoot":"/source/"}