{"version":3,"sources":["directives/preview.ts","directives/preview.js"],"names":["preview"],"mappings":"AAYA;AACA,SAAA,UAAA;IACIA,OAAOA;QACHA,UAAUA;QACVA,OAAOA;YACHA,aAAaA;;QAEjBA,MAAMA,UAACA,OAAOA,SAASA,OAAKA;YACxBA,IAAIA,CAAWA,OAAQA;gBACnBA;YAEJA,QAAQA,GAAGA,UAAUA,YAAAA;gBACjB,IAAI,aAAa,QAAQ;gBAEzB,IAAI,CAAC,WAAW,SAAS,CAAC,WAAW,MAAM;oBACvC;gBAEJ,IAAI,SAAS,IAAI;gBAEjB,OAAO,SAAS,UAAU,GAAyB;oBAC/C,MAAM,OAAO,YAAA;wBACT,MAAM,cAAc,EAAE,OAAO;;;gBAIrC,OAAO,cAAc,WAAW,MAAM;;;;;AAxBtC,QAAA,UAAO;ACavB","file":"directives/preview.js","sourcesContent":["interface IWindow extends Window {\r\n    FileReader: FileReader;\r\n}\r\n\r\ninterface IFileReaderOnLoadEvent extends Event {\r\n    target: IFileReaderOnLoadEventTarget;\r\n}\r\n\r\ninterface IFileReaderOnLoadEventTarget extends EventTarget {\r\n    result: string;\r\n}\r\n\r\n/*@ngInject*/\r\nexport function preview() {\r\n    return {\r\n        restrict: 'A',\r\n        scope: {\r\n            previewdest: '=preview'\r\n        },\r\n        link: (scope, element, attrs) => {\r\n            if (!(<IWindow>window).FileReader)\r\n                return;\r\n\r\n            element.on('change', function () {\r\n                var elementRaw = element[0];\r\n\r\n                if (!elementRaw.files || !elementRaw.files[0])\r\n                    return;\r\n\r\n                var reader = new FileReader();\r\n\r\n                reader.onload = function (e: IFileReaderOnLoadEvent) {\r\n                    scope.$apply(function () {\r\n                        scope.previewdest = e.target.result;\r\n                    });\r\n                };\r\n\r\n                reader.readAsDataURL(elementRaw.files[0]);\r\n            });\r\n        }\r\n    };\r\n}","/*@ngInject*/\nfunction preview() {\n    return {\n        restrict: 'A',\n        scope: {\n            previewdest: '=preview'\n        },\n        link: function (scope, element, attrs) {\n            if (!window.FileReader)\n                return;\n            element.on('change', function () {\n                var elementRaw = element[0];\n                if (!elementRaw.files || !elementRaw.files[0])\n                    return;\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    scope.$apply(function () {\n                        scope.previewdest = e.target.result;\n                    });\n                };\n                reader.readAsDataURL(elementRaw.files[0]);\n            });\n        }\n    };\n}\nexports.preview = preview;\n"],"sourceRoot":"/source/"}