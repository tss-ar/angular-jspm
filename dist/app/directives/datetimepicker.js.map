{"version":3,"sources":["directives/datetimepicker.ts","directives/datetimepicker.js"],"names":["datetimepicker","datetimepicker.setDate"],"mappings":"AAAA,SAAA,iBAAA;IACIA;IAEAA,OAAOA;QACHA,UAAUA;QACVA,SAASA;QACTA,OAAOA;YACHA,SAASA;YACTA,SAASA;YACTA,UAAUA;YACVA,aAAaA;YACbA,QAAQA;;QAEZA,MAAMA,UAACA,OAAOA,SAASA,OAAOA,aAAWA;YACrCA,QAAQA,KAAKA;YAEbA,IAAIA,gBAAgBA;YAEpBA,IAAIA,WAAWA,QAAQA,UAAUA,MAAMA,YAAYA,MAAMA,WAAWA;YAEpEA,QAAQA,eAAeA;gBACnBA,UAAUA;gBACVA,UAAUA;gBACVA,WAAWA;gBACXA,YAAYA;gBACZA,aAAaA,MAAMA;gBACnBA,QAAQA,MAAMA;eACfA,GAAGA,aAAaA,UAAUA,GAACA;gBAC1B,IAAI,eAAe;oBACf,QAAQ,EAAE;oBACV;;gBAGJ,MAAM,OAAO,YAAA;oBACT,QAAQ,EAAE;;eAEfA,GAAGA,UAAUA,UAAUA,GAACA;gBACvB,IAAI,OAAO,QAAQ,KAAK,kBAAkB;gBAE1C,IAAI,eAAe;oBACf,QAAQ;oBACR;;gBAGJ,MAAM,OAAO,YAAA;oBACT,QAAQ;;;YAIhBA,YAAYA,UAAUA,YAAAA;gBAClB,gBAAgB;gBAChB,QAAQ,KAAK,kBAAkB,QAAQ,YAAY;gBACnD,gBAAgB;;YAGpBA,MAAMA,OAAOA,WAAWA,YAAAA;gBACpB,IAAI,MAAM,YAAY,MAAM;oBACxB,QAAQ,KAAK,kBAAkB,WAAW,MAAM;;qBAC7C;oBACH,QAAQ,KAAK,kBAAkB,WAAW,IAAI,KAAK;;;YAI3DA,MAAMA,OAAOA,WAAWA,YAAAA;gBACpB,IAAI,MAAM,YAAY,MAAM;oBACxB,QAAQ,KAAK,kBAAkB,WAAW,MAAM;;qBAC7C;oBACH,QAAQ,KAAK,kBAAkB,WAAW,IAAI,OAAO,YAAY,IAAI,OAAO,gBAAgB;;;YAIpGA,SAAAA,QAAiBA,MAAIA;gBACjBC,IAAIA,SAASA,MAAMA;oBACfA,YAAYA,cAAcA,IAAIA,KAAKA,KAAKA;;qBACrCA;oBACHA,YAAYA,cAAcA;;;;;;;;;AA3E9B,QAAA,iBAAc;AC6E9B","file":"directives/datetimepicker.js","sourcesContent":["export function datetimepicker() {\r\n    'ngInject';\r\n\r\n    return {\r\n        restrict: 'A',\r\n        require: 'ngModel',\r\n        scope: {\r\n            mindate: '=datetimepickerMindate',\r\n            maxdate: '=datetimepickerMaxdate',\r\n            picktime: '=datetimepickerPicktime',\r\n            minviewmode: '=datetimepickerMinviewmode',\r\n            format: '=datetimepickerFormat'\r\n        },\r\n        link: (scope, element, attrs, ngModelCtrl) => {\r\n            console.warn('directive tss:datetimepicker is now deprecated.');\r\n            \r\n            var outsideUpdate = false;\r\n\r\n            var picktime = angular.isDefined(scope.picktime) ? scope.picktime : true;\r\n\r\n            element.datetimepicker({\r\n                pickTime: picktime,\r\n                language: 'es',\r\n                showToday: true,\r\n                useCurrent: false,\r\n                minViewMode: scope.minviewmode,\r\n                format: scope.format,\r\n            }).on(\"dp.change\", function (e) {\r\n                if (outsideUpdate) {\r\n                    setDate(e.date);\r\n                    return;\r\n                }\r\n\r\n                scope.$apply(function () {\r\n                    setDate(e.date);\r\n                });\r\n            }).on(\"change\", function (e) {\r\n                var date = element.data(\"DateTimePicker\").getDate();\r\n\r\n                if (outsideUpdate) {\r\n                    setDate(date);\r\n                    return;\r\n                }\r\n\r\n                scope.$apply(function () {\r\n                    setDate(date);\r\n                });\r\n            });\r\n\r\n            ngModelCtrl.$render = function () {\r\n                outsideUpdate = true;\r\n                element.data(\"DateTimePicker\").setDate(ngModelCtrl.$modelValue);\r\n                outsideUpdate = false;\r\n            };\r\n\r\n            scope.$watch('mindate', function () {\r\n                if (scope.mindate !== null) {\r\n                    element.data(\"DateTimePicker\").setMinDate(scope.mindate);\r\n                } else {\r\n                    element.data(\"DateTimePicker\").setMinDate(new Date(0));\r\n                }\r\n            });\r\n\r\n            scope.$watch('maxdate', function () {\r\n                if (scope.maxdate !== null) {\r\n                    element.data(\"DateTimePicker\").setMaxDate(scope.maxdate);\r\n                } else {\r\n                    element.data(\"DateTimePicker\").setMaxDate(new Date().setFullYear(new Date().getFullYear() + 100));\r\n                }\r\n            });\r\n\r\n            function setDate(date) {\r\n                if (date !== null) {\r\n                    ngModelCtrl.$setViewValue(new Date(date.toJSON()));\r\n                } else {\r\n                    ngModelCtrl.$setViewValue(null);\r\n                }\r\n            }\r\n\r\n            ////    dateFromPicker.children('input.form-control').click(function () {\r\n            ////        dateFromPicker.data(\"DateTimePicker\").show();\r\n            ////    });\r\n        }\r\n    };\r\n}","function datetimepicker() {\n    'ngInject';\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            mindate: '=datetimepickerMindate',\n            maxdate: '=datetimepickerMaxdate',\n            picktime: '=datetimepickerPicktime',\n            minviewmode: '=datetimepickerMinviewmode',\n            format: '=datetimepickerFormat'\n        },\n        link: function (scope, element, attrs, ngModelCtrl) {\n            console.warn('directive tss:datetimepicker is now deprecated.');\n            var outsideUpdate = false;\n            var picktime = angular.isDefined(scope.picktime) ? scope.picktime : true;\n            element.datetimepicker({\n                pickTime: picktime,\n                language: 'es',\n                showToday: true,\n                useCurrent: false,\n                minViewMode: scope.minviewmode,\n                format: scope.format,\n            }).on(\"dp.change\", function (e) {\n                if (outsideUpdate) {\n                    setDate(e.date);\n                    return;\n                }\n                scope.$apply(function () {\n                    setDate(e.date);\n                });\n            }).on(\"change\", function (e) {\n                var date = element.data(\"DateTimePicker\").getDate();\n                if (outsideUpdate) {\n                    setDate(date);\n                    return;\n                }\n                scope.$apply(function () {\n                    setDate(date);\n                });\n            });\n            ngModelCtrl.$render = function () {\n                outsideUpdate = true;\n                element.data(\"DateTimePicker\").setDate(ngModelCtrl.$modelValue);\n                outsideUpdate = false;\n            };\n            scope.$watch('mindate', function () {\n                if (scope.mindate !== null) {\n                    element.data(\"DateTimePicker\").setMinDate(scope.mindate);\n                }\n                else {\n                    element.data(\"DateTimePicker\").setMinDate(new Date(0));\n                }\n            });\n            scope.$watch('maxdate', function () {\n                if (scope.maxdate !== null) {\n                    element.data(\"DateTimePicker\").setMaxDate(scope.maxdate);\n                }\n                else {\n                    element.data(\"DateTimePicker\").setMaxDate(new Date().setFullYear(new Date().getFullYear() + 100));\n                }\n            });\n            function setDate(date) {\n                if (date !== null) {\n                    ngModelCtrl.$setViewValue(new Date(date.toJSON()));\n                }\n                else {\n                    ngModelCtrl.$setViewValue(null);\n                }\n            }\n            ////    dateFromPicker.children('input.form-control').click(function () {\n            ////        dateFromPicker.data(\"DateTimePicker\").show();\n            ////    });\n        }\n    };\n}\nexports.datetimepicker = datetimepicker;\n"],"sourceRoot":"/source/"}