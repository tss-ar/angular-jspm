{"version":3,"sources":["entities/feedback.ts","entities/feedback.js"],"names":["Feedback","Feedback.constructor","Feedback.clear","Feedback.setNone","Feedback.setInfo","Feedback.setError","Feedback.setSuccess","Feedback.isInfo","Feedback.isError","Feedback.isSuccess","Feedback.setText"],"mappings":"AAAA;AAEA,IAAA,iBAAA,QAA2B;AAE3B,IAAA,WAAA,CAAA,YAAA;IAAAA,SAAAA,WAAAA;QACIC,KAAAA,YAAYA;;IAIZD,SAAAA,UAAAA,QAAAA,YAAAA;QACIE,KAAKA,YAAYA;QACjBA,KAAKA,OAAOA;QACZA,KAAKA,OAAOA,eAAAA,aAAaA;;IAG7BF,SAAAA,UAAAA,UAAAA,UAAQA,MAAaA;QACjBG,KAAKA,QAAQA;QACbA,KAAKA,OAAOA,eAAAA,aAAaA;;IAG7BH,SAAAA,UAAAA,UAAAA,UAAQA,MAAaA;QACjBI,KAAKA,QAAQA;QACbA,KAAKA,OAAOA,eAAAA,aAAaA;;IAG7BJ,SAAAA,UAAAA,WAAAA,UAASA,MAAaA;QAClBK,KAAKA,QAAQA;QACbA,KAAKA,OAAOA,eAAAA,aAAaA;;IAG7BL,SAAAA,UAAAA,aAAAA,UAAWA,MAAaA;QACpBM,KAAKA,QAAQA;QACbA,KAAKA,OAAOA,eAAAA,aAAaA;;IAG7BN,SAAAA,UAAAA,SAAAA,YAAAA;QACIO,OAAOA,KAAKA,SAASA,eAAAA,aAAaA;;IAGtCP,SAAAA,UAAAA,UAAAA,YAAAA;QACIQ,OAAOA,KAAKA,SAASA,eAAAA,aAAaA;;IAGtCR,SAAAA,UAAAA,YAAAA,YAAAA;QACIS,OAAOA,KAAKA,SAASA,eAAAA,aAAaA;;IAG9BT,SAAAA,UAAAA,UAARA,UAAgBA,MAAaA;QACzBU,KAAKA,OAAOA,OAAOA,OAAOA;;IAElCV,OAAAA;;AA9Ca,QAAA,WAAQ;ACsCrB","file":"entities/feedback.js","sourcesContent":["'use strict';\r\n\r\nimport {FeedbackType} from './feedbackType';\r\n\r\nexport class Feedback {\r\n    isWorking = false;\r\n    text: string;\r\n    type: FeedbackType;\r\n\r\n    clear() {\r\n        this.isWorking = false;\r\n        this.text = '';\r\n        this.type = FeedbackType.None;\r\n    }\r\n\r\n    setNone(text?: string) {\r\n        this.setText(text);\r\n        this.type = FeedbackType.None;\r\n    }\r\n\r\n    setInfo(text?: string) {\r\n        this.setText(text);\r\n        this.type = FeedbackType.Info;\r\n    }\r\n\r\n    setError(text?: string) {\r\n        this.setText(text);\r\n        this.type = FeedbackType.Error;\r\n    }\r\n\r\n    setSuccess(text?: string) {\r\n        this.setText(text);\r\n        this.type = FeedbackType.Success;\r\n    }\r\n\r\n    isInfo(): boolean {\r\n        return this.type === FeedbackType.Info;\r\n    }\r\n\r\n    isError(): boolean {\r\n        return this.type === FeedbackType.Error;\r\n    }\r\n\r\n    isSuccess(): boolean {\r\n        return this.type === FeedbackType.Success;\r\n    }\r\n\r\n    private setText(text?: string) {\r\n        this.text = text ? text : '';\r\n    }\r\n}","'use strict';\nvar feedbackType_1 = require('./feedbackType');\nvar Feedback = (function () {\n    function Feedback() {\n        this.isWorking = false;\n    }\n    Feedback.prototype.clear = function () {\n        this.isWorking = false;\n        this.text = '';\n        this.type = feedbackType_1.FeedbackType.None;\n    };\n    Feedback.prototype.setNone = function (text) {\n        this.setText(text);\n        this.type = feedbackType_1.FeedbackType.None;\n    };\n    Feedback.prototype.setInfo = function (text) {\n        this.setText(text);\n        this.type = feedbackType_1.FeedbackType.Info;\n    };\n    Feedback.prototype.setError = function (text) {\n        this.setText(text);\n        this.type = feedbackType_1.FeedbackType.Error;\n    };\n    Feedback.prototype.setSuccess = function (text) {\n        this.setText(text);\n        this.type = feedbackType_1.FeedbackType.Success;\n    };\n    Feedback.prototype.isInfo = function () {\n        return this.type === feedbackType_1.FeedbackType.Info;\n    };\n    Feedback.prototype.isError = function () {\n        return this.type === feedbackType_1.FeedbackType.Error;\n    };\n    Feedback.prototype.isSuccess = function () {\n        return this.type === feedbackType_1.FeedbackType.Success;\n    };\n    Feedback.prototype.setText = function (text) {\n        this.text = text ? text : '';\n    };\n    return Feedback;\n})();\nexports.Feedback = Feedback;\n"],"sourceRoot":"/source/"}